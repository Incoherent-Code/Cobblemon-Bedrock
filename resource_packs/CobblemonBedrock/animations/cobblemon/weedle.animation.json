/* This File was generated and/or processed with CobbleBuild.
 * These files might be overwritable in the future, but for now please submit any issues to CobbleBuild
 * instead of fixing them here. This file should not be overwritten in cobblemon-bedrock.
 */
{
  "format_version": "1.10.0",
  "animations": {
    "animation.weedle.sleep": {
      "loop": true,
      "bones": {
        "body": {
          "rotation": [
            0.0,
            0.0,
            -15.0
          ]
        },
        "body_segment2": {
          "rotation": [
            1.6024,
            -14.96096,
            5.15616
          ]
        },
        "body_segment3": {
          "rotation": [
            1.10153,
            -22.43946,
            5.36435
          ]
        },
        "head": {
          "rotation": [
            "11.25+math.sin(q.anim_time*90*2)*0.75",
            -25.5,
            2.75
          ]
        },
        "eyelid_right": {
          "position": [
            0.0,
            0.0,
            -0.1
          ]
        },
        "tail": {
          "rotation": [
            "-3.5+math.sin(q.anim_time*90*2)*0.5",
            17.5,
            5.25
          ]
        },
        "tail2": {
          "rotation": [
            "-0.5+math.sin(q.anim_time*90*2-60)*0.5",
            22.5,
            5.5
          ]
        },
        "tail3": {
          "rotation": [
            "-1.75+math.sin(q.anim_time*90*2-120)*1",
            17.5,
            2.5
          ]
        },
        "tail4": {
          "rotation": [
            "-1.5+math.sin(q.anim_time*90*2-180)*1.5",
            22.5,
            2.75
          ]
        },
        "tail5": {
          "rotation": [
            0.0,
            15.0,
            0.0
          ]
        },
        "eyelid_left": {
          "position": [
            0.0,
            0.0,
            -0.1
          ]
        }
      }
    },
    "animation.weedlemodel.singlebonelook": {
      "loop": true,
      "bones": {
        "head": {
          "rotation": [
            "math.clamp(query.target_x_rotation - this, -45, 70)",
            "math.clamp(query.target_y_rotation - this, -45, 45)",
            0.0
          ]
        }
      }
    },
    "animation.weedle.ground_idle2": {
      "loop": true,
      "bones": {
        "body": {
          "rotation": [
            0.0,
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "-0.1*math.sin(q.anim_time*90*4)",
            0.0
          ]
        },
        "body_segment": {
          "position": [
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4)*0.1,-0.1,0.2)",
            0.0
          ]
        },
        "body_segment2": {
          "rotation": [
            "37.5-40",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            0.0,
            "-0.2+0.1*(math.sin(q.anim_time*90*4)*1+1)"
          ]
        },
        "body_segment3": {
          "rotation": [
            "32.5-math.clamp(math.sin(q.anim_time*90*4-45)*1,-1,1)-30",
            0.0,
            0.0
          ]
        },
        "head": {
          "rotation": [
            "-math.clamp(math.sin(q.anim_time*90*4+90)*1,-1,1)",
            0.0,
            0.0
          ]
        },
        "tail": {
          "rotation": [
            "-5-2*(math.sin(q.anim_time*90*4)*1+1)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "0.4+0.2*(math.sin(q.anim_time*90*4)*1+1)",
            0.0
          ]
        },
        "tail2": {
          "rotation": [
            "2+2*(math.sin(q.anim_time*90*4)*1+1)",
            0.0,
            0.0
          ]
        },
        "tail3": {
          "rotation": [
            "1*(math.sin(q.anim_time*90*4)*1+1)+3",
            0.0,
            0.0
          ]
        }
      }
    },
    "animation.weedle.ground_walk": {
      "loop": true,
      "bones": {
        "body": {
          "rotation": [
            "(math.sin(q.anim_time*90*4)*1+1)*7+math.clamp(math.sin(-q.anim_time*90*4)*1,0,20)-math.clamp(math.sin(-q.anim_time*90*4+60)*0.8,0,20)",
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4*2)*1,0,1)-math.clamp(math.sin(-q.anim_time*90*4*2)*1,0,1)"
          ],
          "position": [
            0.0,
            "0.3+math.clamp(math.sin(q.anim_time*90*4-45)*0.2,0,1)+math.clamp(math.sin(-q.anim_time*90*4+60)*1,0,20)",
            "-math.clamp(math.sin(q.anim_time*90*4)*1,0,1)+-math.clamp(math.sin(-q.anim_time*90*4)*1,0,1)"
          ]
        },
        "body_segment": {
          "rotation": [
            "-math.clamp(math.sin(-q.anim_time*90*4-120)*4,0,20)+math.clamp(math.sin(-q.anim_time*90*4+60)*2,0,20)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4-45)*1,0,20)-math.clamp(math.sin(q.anim_time*90*4-45+180)*1,0,20)",
            0.0
          ]
        },
        "body_segment2": {
          "rotation": [
            "math.sin(q.anim_time*90*4-90)*10-math.clamp((math.sin(q.anim_time*90*4)*1+90)*10,0,10)-5",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "math.clamp(math.sin(-q.anim_time*90*4-12)*0.5,0,20)-math.clamp(math.sin(q.anim_time*90*4-12)*1,0,20)",
            0.0
          ]
        },
        "head": {
          "rotation": [
            "-7.5+math.clamp(math.sin(-q.anim_time*90*4+60)*20,0,20)+math.sin(q.anim_time*90*4)*10",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "-math.clamp(math.sin(q.anim_time*90*4-45)*0.5,0,20)",
            0.0
          ]
        },
        "tail": {
          "rotation": [
            "-15*(math.sin(q.anim_time*90*4)*1+1)-math.clamp(math.sin(-q.anim_time*90*4)*25,0,30)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4-10)*1.5,0,1)+math.clamp(math.sin(q.anim_time*90*4-150)*2,0,2)-math.clamp(math.sin(-q.anim_time*90*4)*1,0,30)",
            0.0
          ]
        },
        "tail2": {
          "rotation": [
            "(math.sin(q.anim_time*90*4+90)*1-2)*7+math.clamp(math.sin(-q.anim_time*90*4)*40,0,35)",
            0.0,
            0.0
          ]
        },
        "tail3": {
          "rotation": [
            "(math.sin(q.anim_time*90*4)*1+1)*5+math.clamp(math.sin(q.anim_time*90*4-30)*10,0,50)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4-30)*0.5,0,50)",
            "-math.clamp(math.sin(q.anim_time*90*4-30)*1,0,50)"
          ]
        },
        "tail4": {
          "rotation": [
            "math.clamp(math.sin(q.anim_time*90*4)*10,0,50)+math.clamp(math.sin(q.anim_time*90*4)*10,-50,0)+15",
            0.0,
            0.0
          ]
        },
        "body_segment3": {
          "rotation": [
            "-(math.sin(q.anim_time*90*4)*1)*15+math.clamp((math.sin(q.anim_time*90*4)*1+90)*10,0,10)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "-math.clamp(math.sin(q.anim_time*90*4+180)*0.2,0,0.1)-math.clamp(math.sin(-q.anim_time*90*4+180)*0.5,0,0.4)",
            0.0
          ]
        }
      }
    },
    "animation.weedle.blink": {
      "animation_length": 0.16667,
      "bones": {
        "eyelid_right": {
          "position": {
            "0.0": [
              0.0,
              0.0,
              -0.1
            ],
            "0.125": [
              0.0,
              0.0,
              -0.1
            ],
            "0.1667": [
              0.0,
              0.0,
              0.0
            ]
          }
        },
        "eyelid_left": {
          "position": {
            "0.0": [
              0.0,
              0.0,
              -0.1
            ],
            "0.125": [
              0.0,
              0.0,
              -0.1
            ],
            "0.1667": [
              0.0,
              0.0,
              0.0
            ]
          }
        }
      }
    }
  }
}