/* This File was generated and/or processed with CobbleBuild.
 * These files might be overwritable in the future, but for now please submit any issues to CobbleBuild
 * instead of fixing them here. This file should not be overwritten in cobblemon-bedrock.
 */
{
  "format_version": "1.10.0",
  "animations": {
    "animation.bellossom.ground_idle": {
      "loop": true,
      "bones": {
        "body": {
          "rotation": [
            0.0,
            "math.sin(q.anim_time*90*4+45)*4",
            "math.sin(q.anim_time*90*4)*4"
          ],
          "position": [
            "-math.sin(q.anim_time*90*4)*0.5",
            0.0,
            0.0
          ]
        },
        "head": {
          "rotation": [
            0.0,
            "-math.sin(q.anim_time*90*4+45)*4",
            "-math.sin(q.anim_time*90*4-10)*4"
          ]
        },
        "flower_right": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+math.sin(q.anim_time*90*8+45)*1",
            0.0,
            0.0
          ]
        },
        "flower_left": {
          "rotation": [
            "math.sin(q.anim_time*90*4-10)*4-math.sin(q.anim_time*90*8)*1",
            0.0,
            0.0
          ]
        },
        "arm_left": {
          "rotation": [
            "-10+math.clamp(math.sin(q.anim_time*90*4-45)*5,-10,4)+math.sin(q.anim_time*90*4-45)*2",
            "-5+math.sin(q.anim_time*90*4-45)*5",
            "5-math.sin(q.anim_time*90*4-20+180)*2-math.clamp(math.sin(q.anim_time*90*4-20+180)*6,-20,0)"
          ]
        },
        "arm_left2": {
          "rotation": [
            0.0,
            "30-math.sin(q.anim_time*90*4+120)*8",
            0.0
          ]
        },
        "arm_right": {
          "rotation": [
            "-10-math.clamp(math.sin(q.anim_time*90*4-45)*5,-10,4)-math.sin(q.anim_time*90*4-45)*2",
            "5+math.sin(q.anim_time*90*4-45)*5",
            "-5+math.sin(q.anim_time*90*4-30)*2+math.clamp(math.sin(q.anim_time*90*4-30)*6,-20,0)"
          ]
        },
        "arm_right2": {
          "rotation": [
            0.0,
            "-30+math.sin(q.anim_time*90*4-60)*8",
            0.0
          ]
        },
        "leaf_left": {
          "rotation": [
            "-math.sin(q.anim_time*90*4-45)*10",
            "-math.clamp(math.sin(q.anim_time*90*4-45)*3,0,20)-math.clamp(-math.sin(q.anim_time*90*4-45)*3,0,20)",
            0.0
          ]
        },
        "leaf_left2": {
          "rotation": [
            0.0,
            0.0,
            "-5-math.sin(q.anim_time*90*4+90)*10"
          ]
        },
        "leaf_right": {
          "rotation": [
            "math.sin(q.anim_time*90*4-45)*10",
            "math.clamp(math.sin(q.anim_time*90*4-45)*3,0,20)+math.clamp(-math.sin(q.anim_time*90*4-45)*3,0,20)",
            0.0
          ]
        },
        "leaf_right2": {
          "rotation": [
            0.0,
            0.0,
            "5-math.sin(q.anim_time*90*4+90)*10"
          ]
        },
        "leaf_front_right": {
          "rotation": [
            "-2+math.sin(q.anim_time*90*4+90)*2",
            "math.sin(q.anim_time*90*4-45+90)*10+math.clamp(math.sin(q.anim_time*90*4-45+90)*10,-10,0)",
            "math.sin(q.anim_time*90*4-45+90)*3"
          ]
        },
        "leaf_front_right2": {
          "rotation": [
            "-5+math.sin(q.anim_time*90*4+90)*10",
            0.0,
            0.0
          ]
        },
        "leaf_front_left": {
          "rotation": [
            "-2+math.sin(q.anim_time*90*4)*2",
            "math.sin(q.anim_time*90*4-45)*10+math.clamp(math.sin(q.anim_time*90*4-45)*10,-10,0)",
            "math.sin(q.anim_time*90*4-45)*3"
          ]
        },
        "leaf_front_left2": {
          "rotation": [
            "-5-math.sin(q.anim_time*90*4+90)*10",
            0.0,
            0.0
          ]
        },
        "leaf_front": {
          "rotation": [
            "math.clamp(math.sin(q.anim_time*90*4-45)*3,0,20)+math.clamp(-math.sin(q.anim_time*90*4-45)*3,0,20)",
            "math.sin(q.anim_time*90*4-45)*10",
            "math.sin(q.anim_time*90*4)*2"
          ]
        },
        "leaf_back_right": {
          "rotation": [
            "2-math.sin(q.anim_time*90*4)*2",
            "math.sin(q.anim_time*90*4-45)*10+math.clamp(math.sin(q.anim_time*90*4-45)*10,-10,0)",
            "math.sin(q.anim_time*90*4-45)*3"
          ]
        },
        "leaf_back_right2": {
          "rotation": [
            "5-math.sin(q.anim_time*90*4+90)*10",
            0.0,
            0.0
          ]
        },
        "leaf_back_left": {
          "rotation": [
            "-math.sin(q.anim_time*90*4+90)*2+2",
            "math.sin(q.anim_time*90*4-45+90)*10+math.clamp(math.sin(q.anim_time*90*4-45+90)*10,-10,0)",
            "math.sin(q.anim_time*90*4-45+90)*3"
          ]
        },
        "leaf_back_left2": {
          "rotation": [
            "math.sin(q.anim_time*90*4+90)*15+5",
            0.0,
            0.0
          ]
        },
        "leaf_back": {
          "rotation": [
            "-math.clamp(math.sin(q.anim_time*90*4-45)*3,0,20)-math.clamp(-math.sin(q.anim_time*90*4-45)*3,0,20)",
            "math.sin(q.anim_time*90*4-45)*10",
            "math.sin(q.anim_time*90*4)*2"
          ]
        },
        "leaf_front2": {
          "rotation": [
            "-5-math.sin(q.anim_time*90*8+90)*4",
            0.0,
            0.0
          ]
        },
        "leaf_back2": {
          "rotation": [
            "5-math.sin(q.anim_time*90*8+90)*4",
            0.0,
            0.0
          ]
        },
        "leaf_inner_front_right": {
          "rotation": [
            "-5+math.sin(q.anim_time*90*4+90)*5",
            0.0,
            0.0
          ]
        },
        "leaf_inner_back_right": {
          "rotation": [
            "-5+math.sin(q.anim_time*90*4+90)*5",
            0.0,
            0.0
          ]
        }
      }
    },
    "animation.bellossommodel.singlebonelook": {
      "loop": true,
      "bones": {
        "head": {
          "rotation": [
            "math.clamp(query.target_x_rotation - this, -45, 70)",
            "math.clamp(query.target_y_rotation - this, -45, 45)",
            0.0
          ]
        }
      }
    },
    "animation.bellossom.ground_walk": {
      "loop": true,
      "bones": {
        "body": {
          "rotation": [
            "2.5+math.sin(q.anim_time*90*4-90)*2",
            0.0,
            0.0
          ],
          "position": [
            "math.sin(q.anim_time*90*2)*1",
            "(math.sin(q.anim_time*90*4-90)*1+1)*0.5",
            "math.sin(q.anim_time*90*4)*1"
          ]
        },
        "head": {
          "rotation": [
            "-2.5-math.sin(q.anim_time*90*4-90)*1",
            0.0,
            0.0
          ]
        },
        "flower_right": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+math.sin(q.anim_time*90*8+45)*1",
            0.0,
            0.0
          ]
        },
        "flower_left": {
          "rotation": [
            "math.sin(q.anim_time*90*4-10)*4-math.sin(q.anim_time*90*8)*1",
            0.0,
            0.0
          ]
        },
        "arm_left": {
          "rotation": [
            0.0,
            "-20-10*(math.sin(q.anim_time*90*4-90)*1-1)",
            "10+math.sin(q.anim_time*90*4-90)*1"
          ]
        },
        "arm_left2": {
          "rotation": [
            0.0,
            "30+3*(math.sin(q.anim_time*90*4+90)*1-1)",
            0.0
          ]
        },
        "arm_right": {
          "rotation": [
            0.0,
            "20+10*(math.sin(q.anim_time*90*4-90)*1-1)",
            "-10-math.sin(q.anim_time*90*4-90)*1"
          ]
        },
        "arm_right2": {
          "rotation": [
            0.0,
            "-30-3*(math.sin(q.anim_time*90*4+90)*1-1)",
            0.0
          ]
        },
        "leaf_left": {
          "rotation": [
            0.0,
            "-math.sin(q.anim_time*90*4)*5",
            0.0
          ]
        },
        "leaf_left2": {
          "rotation": [
            0.0,
            0.0,
            "math.sin(q.anim_time*90*4)*5+5"
          ]
        },
        "leaf_right": {
          "rotation": [
            0.0,
            "math.sin(q.anim_time*90*4)*5",
            0.0
          ]
        },
        "leaf_right2": {
          "rotation": [
            0.0,
            0.0,
            "-math.sin(q.anim_time*90*4)*5-5"
          ]
        },
        "leaf_front_right": {
          "rotation": [
            0.0,
            "math.sin(q.anim_time*90*4)*5",
            0.0
          ]
        },
        "leaf_front_right2": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+5",
            0.0,
            0.0
          ]
        },
        "leaf_front_left": {
          "rotation": [
            0.0,
            "-math.sin(q.anim_time*90*4)*5",
            0.0
          ]
        },
        "leaf_front_left2": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+5",
            0.0,
            0.0
          ]
        },
        "leaf_front2": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+5",
            0.0,
            0.0
          ]
        },
        "leaf_back_right": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5",
            0.0,
            0.0
          ]
        },
        "leaf_back_right2": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+5",
            0.0,
            0.0
          ]
        },
        "leaf_back_left": {
          "rotation": [
            0.0,
            "-math.sin(q.anim_time*90*4)*5",
            0.0
          ]
        },
        "leaf_back_left2": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+5",
            0.0,
            0.0
          ]
        },
        "leaf_back": {
          "rotation": [
            0.0,
            "-math.sin(q.anim_time*90*4)*5",
            0.0
          ]
        },
        "leaf_back2": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*5+5",
            0.0,
            0.0
          ]
        }
      }
    },
    "animation.bellossom.blink": {
      "animation_length": 0.16667,
      "bones": {
        "eyelid_right": {
          "position": {
            "0.0": [
              0.0,
              0.0,
              -0.1
            ],
            "0.125": [
              0.0,
              0.0,
              -0.1
            ],
            "0.1667": [
              0.0,
              0.0,
              0.0
            ]
          }
        },
        "eyelid_left": {
          "position": {
            "0.0": [
              0.0,
              0.0,
              -0.1
            ],
            "0.125": [
              0.0,
              0.0,
              -0.1
            ],
            "0.1667": [
              0.0,
              0.0,
              0.0
            ]
          }
        }
      }
    }
  }
}