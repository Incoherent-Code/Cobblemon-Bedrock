/* This File was generated and/or processed with CobbleBuild.
 * These files might be overwritable in the future, but for now please submit any issues to CobbleBuild
 * instead of fixing them here. This file should not be overwritten in cobblemon-bedrock.
 */
{
  "format_version": "1.10.0",
  "animations": {
    "animation.jolteonmodel.singlebonelook": {
      "loop": true,
      "bones": {
        "head": {
          "rotation": [
            "math.clamp(query.target_x_rotation - this, -45, 70)",
            "math.clamp(query.target_y_rotation - this, -45, 45)",
            0.0
          ]
        }
      }
    },
    "animation.jolteon.ground_idle": {
      "loop": true,
      "override_previous_animation": true,
      "bones": {
        "head": {
          "rotation": [
            "-math.sin(q.anim_time*90*4)*0.2",
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4+45)*0.2,-1.2,1.2)"
          ]
        },
        "ear_right": {
          "rotation": [
            0.0,
            0.0,
            "-math.sin(q.anim_time*90*2+90)+0.5*math.clamp(math.sin(q.anim_time*90*2-90),-0.5,0.5)"
          ]
        },
        "ear_left": {
          "rotation": [
            0.0,
            0.0,
            "math.sin(q.anim_time*90*2+90)-0.5*math.clamp(math.sin(q.anim_time*90*2-90),-0.5,0.5)"
          ]
        },
        "torso": {
          "rotation": [
            "math.sin(q.anim_time*90*4)*0.2",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "(math.clamp(math.sin(q.anim_time*90*4+180)*0.1,-0.03,0.03)+math.clamp(math.sin(q.anim_time*90*2+180)*0.15,-0.5,0.5))*0.5",
            0.0
          ]
        },
        "ruff": {
          "rotation": [
            0.0,
            "-2*math.sin(q.anim_time*90*4)+math.clamp(3*math.sin(q.anim_time*90*4),-3,3)",
            0.0
          ]
        },
        "spikes": {
          "rotation": [
            0.0,
            "-2*math.sin(q.anim_time*90*4+90)+math.clamp(3*math.sin(q.anim_time*90*4+90),-3,3)",
            0.0
          ]
        }
      }
    },
    "animation.jolteon.ground_run": {
      "loop": true,
      "override_previous_animation": true,
      "bones": {
        "body": {
          "rotation": [
            "5*(math.sin(q.anim_time*90*4*2-90)*1+1)-math.clamp(10*(math.sin(q.anim_time*90*4*2+45)*1+1),15,20)+15",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "math.clamp(math.sin(q.anim_time*90*4*2+45)*1,0.5,2)-0.5+math.clamp(math.sin(q.anim_time*90*4*2)*1,0,2)",
            "-math.clamp(math.sin(q.anim_time*90*4*2-30)*2,0,2)+math.clamp(math.sin(-q.anim_time*90*4*2-30)*1,0,2)"
          ]
        },
        "head": {
          "rotation": [
            "-5*(math.sin(q.anim_time*90*4*2-90)*1+1)+math.clamp(10*(math.sin(q.anim_time*90*4*2+45)*1+1),15,20)-15",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            -1.0,
            -1.0
          ]
        },
        "leg_front_right": {
          "rotation": [
            "5+math.clamp(math.sin(-q.anim_time*90*4*1-20)*30,-40,0)+math.clamp(math.sin(q.anim_time*90*4*1+20)*30,-40,0)+math.clamp(math.sin(-q.anim_time*90*4*2-40)*50,0,70)-math.clamp(math.sin(-q.anim_time*90*4*2-30+180)*20,5,70)+5",
            0.0,
            0.0
          ]
        },
        "leg_front_left": {
          "rotation": [
            "5+math.clamp(math.sin(-q.anim_time*90*4*1-20+30)*30,-40,0)+math.clamp(math.sin(q.anim_time*90*4*1+20-30)*30,-40,0)+math.clamp(math.sin(-q.anim_time*90*4*2-40+30)*50,0,70)-math.clamp(math.sin(-q.anim_time*90*4*2-30+180+30)*20,5,70)+5",
            0.0,
            0.0
          ]
        },
        "leg_back_right": {
          "rotation": [
            "math.clamp(math.sin(q.anim_time*90*4*2)*40,0,50)-math.clamp(math.sin(-q.anim_time*90*4*2)*40,0,50)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "-math.clamp(math.sin(q.anim_time*90*4*2)*0.3,-1,2)-math.clamp(math.sin(-q.anim_time*90*4*2)*0.8,-1,2)",
            "-0.3+math.clamp(math.sin(q.anim_time*90*4*2-30)*0.5,0,2)-math.clamp(math.sin(q.anim_time*90*4*2-30+180)*0.5,0,2)"
          ]
        },
        "leg_back_left": {
          "rotation": [
            "math.clamp(math.sin(q.anim_time*90*4*2+20)*40,0,50)-math.clamp(math.sin(-q.anim_time*90*4*2-20)*40,0,50)",
            0.0,
            0.0
          ],
          "position": [
            0.0,
            "-math.clamp(math.sin(q.anim_time*90*4*2)*0.3,-1,2)-math.clamp(math.sin(-q.anim_time*90*4*2)*0.8,0,2)",
            "-0.3+math.clamp(math.sin(q.anim_time*90*4*2-30)*0.5,0,2)-math.clamp(math.sin(q.anim_time*90*4*2-30+180)*0.5,0,2)"
          ]
        },
        "ear_right": {
          "rotation": [
            "-10-4*math.sin(q.anim_time*90*4*2+45)-math.clamp(4*math.sin(q.anim_time*90*4*2+90),-4,4)",
            "5+math.sin(q.anim_time*90*4*2+45)+math.clamp(math.sin(q.anim_time*90*4*2+90),-1,1)",
            0.0
          ]
        },
        "ear_left": {
          "rotation": [
            "-10-4*math.sin(q.anim_time*90*4*2+45)-math.clamp(4*math.sin(q.anim_time*90*4*2+90),-4,4)",
            "-5-math.sin(q.anim_time*90*4*2+45)-math.clamp(math.sin(q.anim_time*90*4*2+90),-1,1)",
            0.0
          ]
        },
        "leg_front_right2": {
          "rotation": [
            "-math.clamp(math.sin(-q.anim_time*90*4*2-70)*20,5,70)+5-math.clamp(math.sin(-q.anim_time*90*4*2-30+180)*10,5,70)+5",
            0.0,
            0.0
          ]
        },
        "leg_front_right3": {
          "rotation": [
            "12*math.sin(q.anim_time*90*8+30)-math.clamp(math.sin(q.anim_time*90*8+15),1,1)",
            0.0,
            0.0
          ]
        },
        "leg_front_left2": {
          "rotation": [
            "-math.clamp(math.sin(-q.anim_time*90*8-70+30)*20,5,70)+5-math.clamp(math.sin(-q.anim_time*90*8-30+180+30)*10,5,70)+5",
            0.0,
            0.0
          ]
        },
        "leg_front_left3": {
          "rotation": [
            "12*math.sin(q.anim_time*90*8-15+30)-math.clamp(math.sin(q.anim_time*90*8-30+30),1,1)",
            0.0,
            0.0
          ]
        },
        "leg_back_right2": {
          "rotation": [
            "math.clamp(math.sin(q.anim_time*90*8-180-30)*20,0,10)-math.clamp(math.sin(-q.anim_time*90*8-90)*20,0,50)",
            0.0,
            0.0
          ]
        },
        "leg_back_right3": {
          "rotation": [
            "20+20*math.sin(q.anim_time*90*8+45-30)-math.clamp(math.sin(q.anim_time*90*8+90-30),1,1)",
            0.0,
            0.0
          ]
        },
        "leg_back_left2": {
          "rotation": [
            "math.clamp(math.sin(q.anim_time*90*8-90)*5,0,5)-math.clamp(math.sin(-q.anim_time*90*8-90)*10,0,10)",
            0.0,
            0.0
          ]
        },
        "leg_back_left3": {
          "rotation": [
            "20+20*math.sin(q.anim_time*90*8+15)-math.clamp(math.sin(q.anim_time*90*8+90),1,1)",
            0.0,
            0.0
          ]
        },
        "ruff": {
          "rotation": [
            "-2.5-math.sin(q.anim_time*90*4*2+30)*7",
            0.0,
            0.0
          ]
        },
        "spikes": {
          "rotation": [
            "-math.sin(q.anim_time*90*4*2+45)*9",
            0.0,
            0.0
          ]
        }
      }
    }
  }
}