/* This File was generated with CobbleBuild.
 * These files might be overwritable in the future, but for now please submit any issues to CobbleBuild
 * instead of fixing them here. 
 */
{
  "format_version": "1.10.0",
  "animation_controllers": {
    "controller.animation.wooper.blink": {
      "initial_state": "init",
      "states": {
        "init": {
          "transitions": [
            {
              "quirk_inactive": "v.next_quirk_wooper_blink = q.life_time + math.random(2, 7); return true;"
            }
          ]
        },
        "quirk_inactive": {
          "transitions": [
            {
              "quirk_active": "v.quirk_end_wooper_blink = q.life_time + 1; return (q.life_time > v.next_quirk_wooper_blink) && (v.state_of_wooper == 1 || v.state_of_wooper == 2 || v.state_of_wooper == 3 || v.state_of_wooper == 4 || v.state_of_wooper == 5 || v.state_of_wooper == 6);"
            }
          ]
        },
        "quirk_active": {
          "animations": [
            "wooper.blink"
          ],
          "transitions": [
            {
              "quirk_inactive": "v.next_quirk_wooper_blink = q.life_time + math.random(2, 7); return q.all_animations_finished && (q.life_time > (v.quirk_end_wooper_blink ?? 1));"
            }
          ]
        }
      }
    },
    "controller.animation.cobblemon.wooper": {
      "initial_state": "standing",
      "states": {
        "sleep": {
          "animations": [
            "wooper.sleep"
          ],
          "transitions": [
            {
              "standing": "v.state_of_wooper = 0; return !q.is_moving;"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "standing": {
          "animations": [
            "woopermodel.singlebonelook",
            "wooper.ground_idle"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper = 1; return q.is_sleeping;"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "walk": {
          "animations": [
            "woopermodel.singlebonelook",
            "wooper.ground_walk"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper = 2; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "float": {
          "animations": [
            "woopermodel.singlebonelook",
            "wooper.water_idle"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper = 3; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "swim": {
          "animations": [
            "woopermodel.singlebonelook",
            "wooper.water_swim"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper = 4; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            }
          ],
          "blend_transition": 0.5
        },
        "shoulderLeft": {
          "animations": [
            "woopermodel.singlebonelook",
            "wooper.ground_idle",
            "wooper.shoulderleft.transform"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper = 5; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "shoulderRight": {
          "animations": [
            "woopermodel.singlebonelook",
            "wooper.ground_idle",
            "wooper.shoulderright.transform"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper = 6; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        }
      }
    },
    "controller.animation.wooper_paldean.blink": {
      "initial_state": "init",
      "states": {
        "init": {
          "transitions": [
            {
              "quirk_inactive": "v.next_quirk_wooper_paldean_blink = q.life_time + math.random(2, 7); return true;"
            }
          ]
        },
        "quirk_inactive": {
          "transitions": [
            {
              "quirk_active": "v.quirk_end_wooper_paldean_blink = q.life_time + 1; return (q.life_time > v.next_quirk_wooper_paldean_blink) && (v.state_of_wooper_paldean == 1 || v.state_of_wooper_paldean == 2 || v.state_of_wooper_paldean == 3 || v.state_of_wooper_paldean == 4 || v.state_of_wooper_paldean == 5 || v.state_of_wooper_paldean == 6);"
            }
          ]
        },
        "quirk_active": {
          "animations": [
            "wooper_paldean.blink"
          ],
          "transitions": [
            {
              "quirk_inactive": "v.next_quirk_wooper_paldean_blink = q.life_time + math.random(2, 7); return q.all_animations_finished && (q.life_time > (v.quirk_end_wooper_paldean_blink ?? 1));"
            }
          ]
        }
      }
    },
    "controller.animation.cobblemon.wooper_paldean": {
      "initial_state": "standing",
      "states": {
        "sleep": {
          "animations": [
            "wooper_paldean.sleep"
          ],
          "transitions": [
            {
              "standing": "v.state_of_wooper_paldean = 0; return !q.is_moving;"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "standing": {
          "animations": [
            "wooperpaldeanmodel.singlebonelook",
            "wooper_paldean.ground_idle"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper_paldean = 1; return q.is_sleeping;"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "walk": {
          "animations": [
            "wooperpaldeanmodel.singlebonelook",
            "wooper_paldean.ground_walk"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper_paldean = 2; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "float": {
          "animations": [
            "wooperpaldeanmodel.singlebonelook",
            "wooper_paldean.water_idle"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper_paldean = 3; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "swim": {
          "animations": [
            "wooperpaldeanmodel.singlebonelook",
            "wooper_paldean.water_swim"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper_paldean = 4; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            }
          ],
          "blend_transition": 0.5
        },
        "shoulderLeft": {
          "animations": [
            "wooperpaldeanmodel.singlebonelook",
            "wooper_paldean.ground_idle",
            "wooper_paldean.shoulderleft.transform"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper_paldean = 5; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        },
        "shoulderRight": {
          "animations": [
            "wooperpaldeanmodel.singlebonelook",
            "wooper_paldean.ground_idle",
            "wooper_paldean.shoulderright.transform"
          ],
          "transitions": [
            {
              "sleep": "v.state_of_wooper_paldean = 6; return q.is_sleeping;"
            },
            {
              "standing": "!q.is_moving"
            },
            {
              "walk": "(q.is_moving && !q.is_swimming)"
            },
            {
              "swim": "q.is_swimming"
            }
          ],
          "blend_transition": 0.5
        }
      }
    }
  }
}